
R version 3.4.0 (2017-04-21) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### Tests of function and environment annotations.
> 
> ## environment annotations
> @@:x <- 23
NULL
> @@:function(y) { y + 1 }
NULL
> 
> annotations(environment())
[[1]]
x <- 23

[[2]]
function(y) {
    y + 1
}

> 
> @@:"annotation1"
NULL
> @@:NULL
NULL
> annotations(environment())
[[1]]
x <- 23

[[2]]
function(y) {
    y + 1
}

[[3]]
[1] "annotation1"

[[4]]
NULL

> 
> @@:symbol
NULL
> @@:-23
NULL
> @@:+89
NULL
> 
> annotations(environment())
[[1]]
x <- 23

[[2]]
function(y) {
    y + 1
}

[[3]]
[1] "annotation1"

[[4]]
NULL

[[5]]
symbol

[[6]]
-23

[[7]]
+89

> 
> @@:for(i in 1:10) i + 1
NULL
> @@:list(x=1, y=2, z=3)$x
NULL
> @@:paste0("Hello", "World", sep=" ")
NULL
> @@:@:pure function(@:numeric x) @:numeric { x + 1 }
NULL
> 
> annotations(environment())
[[1]]
x <- 23

[[2]]
function(y) {
    y + 1
}

[[3]]
[1] "annotation1"

[[4]]
NULL

[[5]]
symbol

[[6]]
-23

[[7]]
+89

[[8]]
for (i in 1:10) i + 1

[[9]]
list(x = 1, y = 2, z = 3)$x

[[10]]
paste0("Hello", "World", sep = " ")

[[11]]
function(x) {
    x + 1
}
attr(,"annotations")
attr(,"annotations")[[1]]
pure


> 
> ##function annotations
> 
> subtracter <-
+     @:author("Scooby", "Doo", "scooby-doo@mystery.machine")
+ function(@:numeric x #comment
+         ,@:numeric y #another comment
+          #yet another comment
+          ) #comment 1
+ # comment2
+ #can have any number of comments here
+   @:numeric
+ {
+   x - y
+ }
> 
> annotations(subtracter, "header")
[[1]]
author("Scooby", "Doo", "scooby-doo@mystery.machine")

> annotations(subtracter, "formals")
$x
$x[[1]]
numeric


$y
$y[[1]]
numeric


> annotations(subtracter, "body")
[[1]]
numeric

> 
> annotations(environment())
[[1]]
x <- 23

[[2]]
function(y) {
    y + 1
}

[[3]]
[1] "annotation1"

[[4]]
NULL

[[5]]
symbol

[[6]]
-23

[[7]]
+89

[[8]]
for (i in 1:10) i + 1

[[9]]
list(x = 1, y = 2, z = 3)$x

[[10]]
paste0("Hello", "World", sep = " ")

[[11]]
function(x) {
    x + 1
}
attr(,"annotations")
attr(,"annotations")[[1]]
pure


> 
> ## no annotations
> f1 <- function(x) { x }
> 
> annotations(f1, "header")
NULL
> is.annotated(f1, "header")
[1] FALSE
> 
> annotations(f1, "formals")
NULL
> is.annotated(f1, "formals")
[1] FALSE
> 
> annotations(f1, "body")
NULL
> is.annotated(f1, "body")
[1] FALSE
> 
> ## function header annotations
> 
> # single header annotation
> f2 <- @:header function(x) { x }
> 
> is.annotated(f2, "header")
[1] TRUE
> annotations(f2, "header")
[[1]]
header

> 
> is.annotated(f2, "formals")
[1] FALSE
> annotations(f2, "formals")
NULL
> 
> is.annotated(f2, "body")
[1] FALSE
> annotations(f2, "body")
NULL
> 
> # multiple header annotations
> f3 <- @:header1
+ @:header2 @:header3
+ function(x)
+ {
+     x
+ }
> 
> is.annotated(f3, "header")
[1] TRUE
> annotations(f3, "header")
[[1]]
header1

[[2]]
header2

[[3]]
header3

> 
> is.annotated(f3, "formals")
[1] FALSE
> annotations(f3, "formals")
NULL
> 
> is.annotated(f3, "body")
[1] FALSE
> annotations(f3, "body")
NULL
> 
> ## function formals annotations
> 
> # single formals annotation
> f4 <- function(@:arg1 x) @:body { x }
> 
> is.annotated(f4, "header")
[1] FALSE
> annotations(f4, "header")
NULL
> 
> is.annotated(f4, "formals")
[1] TRUE
> annotations(f4, "formals")
$x
$x[[1]]
arg1


> 
> is.annotated(f4, "body")
[1] TRUE
> annotations(f4, "body")
[[1]]
body

> 
> # multiple formals annotations
> f5 <- function(@:ann1 @:ann2 @:ann3 x,
+                y,
+                @:ann1
+                @:ann2 z, @:ann1
+                @:ann3
+                a) { a + x + y + z }
> 
> is.annotated(f5, "header")
[1] FALSE
> annotations(f5, "header")
NULL
> 
> is.annotated(f5, "formals")
[1] TRUE
> annotations(f5, "formals")
$x
$x[[1]]
ann1

$x[[2]]
ann2

$x[[3]]
ann3


$z
$z[[1]]
ann1

$z[[2]]
ann2


$a
$a[[1]]
ann1

$a[[2]]
ann3


> 
> is.annotated(f5, "body")
[1] FALSE
> annotations(f5, "body")
NULL
> 
> ## function body annotations
> 
> # single body annotation
> f6 <- function(x) @:body { x }
> 
> is.annotated(f6, "header")
[1] FALSE
> annotations(f6, "header")
NULL
> 
> is.annotated(f6, "formals")
[1] FALSE
> annotations(f6, "formals")
NULL
> 
> is.annotated(f6, "body")
[1] TRUE
> annotations(f6, "body")
[[1]]
body

> 
> # multiple body annotations
> f7 <- function(x) @:body1
+ @:body2
+ @:body3 {
+     x
+ }
> 
> is.annotated(f7, "header")
[1] FALSE
> annotations(f7, "header")
NULL
> 
> is.annotated(f7, "formals")
[1] FALSE
> annotations(f7, "formals")
NULL
> 
> is.annotated(f7, "body")
[1] TRUE
> annotations(f7, "body")
[[1]]
body1

[[2]]
body2

[[3]]
body3

> 
> ## function header and formals annotations
> f8 <- @:header1
+ @:header2 @:header3 function(@:ann1 @:ann2 @:ann3 x,
+                y,
+                @:ann1
+                @:ann2 z, @:ann1
+                @:ann3
+                a) {
+   a + x + y + z
+ }
> 
> is.annotated(f8, "header")
[1] TRUE
> annotations(f8, "header")
[[1]]
header1

[[2]]
header2

[[3]]
header3

> 
> is.annotated(f8, "formals")
[1] TRUE
> annotations(f8, "formals")
$x
$x[[1]]
ann1

$x[[2]]
ann2

$x[[3]]
ann3


$z
$z[[1]]
ann1

$z[[2]]
ann2


$a
$a[[1]]
ann1

$a[[2]]
ann3


> 
> is.annotated(f8, "body")
[1] FALSE
> annotations(f8, "body")
NULL
> 
> ## function header and body annotations
> f9 <- @:header1
+     @:header2 @:header3
+     function(a, x, y, z)
+     @:body1
+     @:body2
+     @:body3 {
+   a + x + y + z
+ }
> 
> is.annotated(f9, "header")
[1] TRUE
> annotations(f9, "header")
[[1]]
header1

[[2]]
header2

[[3]]
header3

> 
> is.annotated(f9, "formals")
[1] FALSE
> annotations(f9, "formals")
NULL
> 
> is.annotated(f9, "body")
[1] TRUE
> annotations(f9, "body")
[[1]]
body1

[[2]]
body2

[[3]]
body3

> 
> ## function formals and body annotations
> f10 <- function(@:ann1 @:ann2 @:ann3 x,
+                 y,
+                 @:ann1
+                 @:ann2 z, @:ann1
+                 @:ann3
+                 a) @:body1
+     @:body2
+     @:body3 {
+       a + x + y + z
+ }
> 
> is.annotated(f10, "header")
[1] FALSE
> annotations(f10, "header")
NULL
> 
> is.annotated(f10, "formals")
[1] TRUE
> annotations(f10, "formals")
$x
$x[[1]]
ann1

$x[[2]]
ann2

$x[[3]]
ann3


$z
$z[[1]]
ann1

$z[[2]]
ann2


$a
$a[[1]]
ann1

$a[[2]]
ann3


> 
> is.annotated(f10, "body")
[1] TRUE
> annotations(f10, "body")
[[1]]
body1

[[2]]
body2

[[3]]
body3

> 
> ## function header, formals and body annotations
> f11 <- @:header1
+     @:header2 @:header3
+     function(@:ann1 @:ann2 @:ann3 x,
+                y,
+                @:ann1
+                @:ann2 z, @:ann1
+                @:ann3
+                a) @:body1
+     @:body2
+     @:body3 {
+       a + x + y + z
+ }
> 
> is.annotated(f11, "header")
[1] TRUE
> annotations(f11, "header")
[[1]]
header1

[[2]]
header2

[[3]]
header3

> 
> is.annotated(f11, "formals")
[1] TRUE
> annotations(f11, "formals")
$x
$x[[1]]
ann1

$x[[2]]
ann2

$x[[3]]
ann3


$z
$z[[1]]
ann1

$z[[2]]
ann2


$a
$a[[1]]
ann1

$a[[2]]
ann3


> 
> is.annotated(f11, "body")
[1] TRUE
> annotations(f11, "body")
[[1]]
body1

[[2]]
body2

[[3]]
body3

> 
> ## setting environment annotations
> e <- environment()
> is.annotated(e)
[1] TRUE
> annotations(e)
[[1]]
x <- 23

[[2]]
function(y) {
    y + 1
}

[[3]]
[1] "annotation1"

[[4]]
NULL

[[5]]
symbol

[[6]]
-23

[[7]]
+89

[[8]]
for (i in 1:10) i + 1

[[9]]
list(x = 1, y = 2, z = 3)$x

[[10]]
paste0("Hello", "World", sep = " ")

[[11]]
function(x) {
    x + 1
}
attr(,"annotations")
attr(,"annotations")[[1]]
pure


> annotations(e) <- list(quote(1 + 2), quote(hello))
> is.annotated(e)
[1] TRUE
> annotations(e)
[[1]]
1 + 2

[[2]]
hello

> annotations(e) <- NULL
> is.annotated(e)
[1] FALSE
> annotations(e)
NULL
> 
> ## setting function annotations
> is.annotated(f11, "header")
[1] TRUE
> annotations(f11, "header")
[[1]]
header1

[[2]]
header2

[[3]]
header3

> annotations(f11, "header") <- list(quote(header_changed))
> is.annotated(f11, "header")
[1] TRUE
> annotations(f11, "header")
[[1]]
header_changed

> annotations(f11, "header") <- NULL
> is.annotated(f11, "header")
[1] FALSE
> annotations(f11, "header")
NULL
> 
> is.annotated(f11, "body")
[1] TRUE
> annotations(f11, "body")
[[1]]
body1

[[2]]
body2

[[3]]
body3

> annotations(f11, "body") <- list(quote({12 + 13}))
> is.annotated(f11, "body")
[1] TRUE
> annotations(f11, "body")
[[1]]
{
    12 + 13
}

> annotations(f11, "body") <- NULL
> is.annotated(f11, "body")
[1] FALSE
> annotations(f11, "body")
NULL
> 
> is.annotated(f11, "formals")
[1] TRUE
> annotations(f11, "formals")
$x
$x[[1]]
ann1

$x[[2]]
ann2

$x[[3]]
ann3


$z
$z[[1]]
ann1

$z[[2]]
ann2


$a
$a[[1]]
ann1

$a[[2]]
ann3


> annotations(f11, "formals") <- list(x = list(quote(ann_x)))
> is.annotated(f11, "formals")
[1] TRUE
> annotations(f11, "formals")
$x
$x[[1]]
ann_x


> annotations(f11, "formals") <- NULL
> is.annotated(f11, "formals")
[1] FALSE
> annotations(f11, "formals")
NULL
> 
> 
> ## getting function annotations without type argument
> stopifnot(inherits(try(annotations(f11)), "try-error"))
Error in annotations.function(f11) : 
  missing annotation type argument for function object.
> 
> ## getting function annotations with invalid type argument
> stopifnot(inherits(try(annotations(f11, "abcd")), "try-error"))
Error in annotations.function(f11, "abcd") : 
  invalid annotation type 'abcd' for function objects.
> 
> ## setting function annotations without type argument
> stopifnot(inherits(try(annotations(f11) <- NULL), "try-error"))
Error in `annotations<-.function`(`*tmp*`, value = NULL) : 
  missing annotation type argument for the function being annotated.
> 
> ## setting function annotations with invalid type argument
> stopifnot(inherits(try(annotations(f11, "efgt") <- NULL), "try-error"))
Error in `annotations<-.function`(`*tmp*`, "efgt", value = NULL) : 
  invalid annotation type 'efgt' for function objects.
> 
> ## getting annotations from non-function and non-environment objects
> annotations(2)
NULL
> annotations("hello")
NULL
> annotations(list(1, 2, 3))
NULL
> 
> ## setting annotations on non-function and non-environment objects
> x <- 2
> stopifnot(
+   inherits(
+     try(annotations(x) <- list(quote(hello), quote(world))),
+     "try-error"))
Error in `annotations<-.default`(`*tmp*`, value = list(hello, world)) : 
  cannot annotate numeric objects.
> 
> y <- "i am a string"
> stopifnot(
+   inherits(
+     try(annotations(y) <- list(quote(hello), quote(world))),
+     "try-error"))
Error in `annotations<-.default`(`*tmp*`, value = list(hello, world)) : 
  cannot annotate character objects.
> 
> z <- list(1, 3, 5)
> stopifnot(
+   inherits(
+     try(annotations(z) <- list(quote(hello), quote(world))),
+     "try-error"))
Error in `annotations<-.default`(`*tmp*`, value = list(hello, world)) : 
  cannot annotate list objects.
> 
> proc.time()
   user  system elapsed 
  0.116   0.024   0.137 
